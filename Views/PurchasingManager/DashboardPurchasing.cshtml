@model Inventory_PLM.Models.ViewModels.PurchaseDashboardViewModel

@{
    ViewData["Title"] = "Dashboard Purchasing Manager";
    Layout = "~/Views/Shared/_PurchaseLayout.cshtml";
}

<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Purchasing Manager Dashboard</h1>

    <div class="row">
        <!-- KPIs -->
        <div class="col-lg-3 mb-4">
            <div class="card bg-primary text-white shadow">
                <div class="card-body">
                    <h5>Total Purchases</h5>
                    <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalPurchaseOrders </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 mb-4">
            <div class="card bg-success text-white shadow">
                <div class="card-body">
                    <h5>Number of Orders</h5>
                    <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TrendsData.Values.Sum()</div>
                </div>
            </div>
        </div>
       @*  <div class="col-lg-3 mb-4">
            <div class="card bg-warning text-white shadow">
                <div class="card-body">
                    <h5>Pending Orders</h5>
                    <div class="h5 mb-0 font-weight-bold text-gray-800">@(Model.TrendsData.Values.Sum() - Model.InventoryLevelsData.Values.Sum())</div>
                </div>
            </div>
        </div> *@
    </div>

    <div class="row">
        <!-- Recent Purchase Orders -->
        <div class="col-lg-12 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Recent Purchase Orders</h6>
                </div>
                <div class="card-body">
                    <table class="table table-bordered" id="recentOrdersTable">
                        <thead>
                            <tr>
                                <th>Order Number</th>
                                <th>Supplier</th>
                                <th>Date</th>
                               @*  <th>Status</th> *@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.RecentPurchaseOrders)
                            {
                                <tr>
                                    <td>@order.OrderNumber</td>
                                    <td>@order.SupplierName</td>
                                    <td>@order.Date.ToString("yyyy-MM-dd")</td>
                                    @* <td>@order.Status</td> *@
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Charts -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Purchasing Trends</h6>
                </div>
                <div class="card-body">
                    <canvas id="trendsChart"></canvas>
                </div>
            </div>
        </div>

        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Inventory Levels</h6>
                </div>
                <div class="card-body">
                    <canvas id="inventoryLevelsChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var trendsData = @Html.Raw(Json.Serialize(Model.TrendsData));
            var inventoryLevelsData = @Html.Raw(Json.Serialize(Model.InventoryLevelsData));

            // Create the Trends Chart
            var ctxTrends = document.getElementById('trendsChart').getContext('2d');
            var trendsChart = new Chart(ctxTrends, {
                type: 'line',
                data: {
                    labels: trendsData.Labels,
                    datasets: [{
                        label: 'Purchasing Trends',
                        data: trendsData.Values,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Create the Inventory Levels Chart
            var ctxInventoryLevels = document.getElementById('inventoryLevelsChart').getContext('2d');
            var inventoryLevelsChart = new Chart(ctxInventoryLevels, {
                type: 'bar',
                data: {
                    labels: inventoryLevelsData.Labels,
                    datasets: [{
                        label: 'Inventory Levels',
                        data: inventoryLevelsData.Values,
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
    </script>
}
@* 
<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Reports</h1>

    <div class="row">
        <!-- Trends Chart -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Purchasing Trends</h6>
                </div>
                <div class="card-body">
                    <canvas id="trendsChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Inventory Levels Chart -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Inventory Levels</h6>
                </div>
                <div class="card-body">
                    <canvas id="inventoryLevelsChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Data for Purchasing Trends
            var trendsData = @Html.Raw(Json.Serialize(Model.TrendsData));

            // Create the Trends Chart
            var ctxTrends = document.getElementById('trendsChart').getContext('2d');
            var trendsChart = new Chart(ctxTrends, {
                type: 'line',
                data: {
                    labels: trendsData.labels,
                    datasets: [{
                        label: 'Purchasing Trends',
                        data: trendsData.values,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Data for Inventory Levels
            var inventoryLevelsData = @Html.Raw(Json.Serialize(Model.InventoryLevelsData));

            // Create the Inventory Levels Chart
            var ctxInventoryLevels = document.getElementById('inventoryLevelsChart').getContext('2d');
            var inventoryLevelsChart = new Chart(ctxInventoryLevels, {
                type: 'bar',
                data: {
                    labels: inventoryLevelsData.labels,
                    datasets: [{
                        label: 'Inventory Levels',
                        data: inventoryLevelsData.values,
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
    </script>
} *@